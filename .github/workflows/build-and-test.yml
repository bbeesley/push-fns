name: Build, Test, & Release ðŸš€
on:
  push:
    branches:
      - "main"
  pull_request_target:
    types: [opened, synchronize, edited]
env:
  REF: ${{ github.event_name == 'push' && github.ref || github.event.pull_request.head.ref }}
concurrency: ${{ github.ref }}-${{ github.event_name }}-${{ github.event.pull_request.head.ref }}
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: checkout
        with:
          ref: ${{ env.REF }}
      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: swatinem/rust-cache@v2
        name: setup cache
        with:
          cache-targets: "false"
          prefix-key: "${{ hashFiles('Cargo.toml') }}"
      - name: run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: checkout
        with:
          ref: ${{ env.REF }}
      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: swatinem/rust-cache@v2
        name: setup cache
        with:
          cache-targets: "false"
          prefix-key: "${{ hashFiles('Cargo.toml') }}"
      - name: run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  test:
    permissions:
      id-token: write
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@v3
        name: checkout
        with:
          ref: ${{ env.REF }}
      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: swatinem/rust-cache@v2
        name: setup cache
        with:
          cache-targets: "false"
          prefix-key: "${{ matrix.os }}-${{ hashFiles('Cargo.toml') }}"
      - name: aws
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::507109231688:role/automation-gha
          aws-region: eu-west-2
      - name: gcp
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.STORAGE_CREDENTIALS }}
      - name: run cargo test
        shell: bash
        run: cargo test
  tests-complete:
    runs-on: ubuntu-latest
    needs: [test, lint, check]
    if: ${{ github.event_name != 'push' }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        if: ${{ github.actor == 'dependabot[bot]' }}
        with:
          ref: ${{ env.REF }}
      - name: approve-dependabot
        if: ${{ github.actor == 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PA_TOKEN }}
        run: |
          gh pr review --approve || true
          gh pr merge --auto --rebase || true
